# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant::Config.run do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "precise64"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "http://files.vagrantup.com/precise64.box"

  # Forward a port from the guest to the host, which allows for outside
  # computers to access the VM, whereas host only networking does not.
  config.vm.forward_port 8080, 8282
  config.vm.forward_port 3306, 3366

  # Share an additional folder to the guest VM. The first argument is
  # an identifier, the second is the path on the guest to mount the
  # folder, and the third is the path on the host to the actual folder.
  config.vm.share_folder "projects", "/home/work", "/Users/candide/projects"

  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = "../cookbooks"
  
    # # You may also specify custom JSON attributes:
    chef.json = {
      :mysql => {
        :server_root_password => "fluxtream",
        :server_repl_password => "fluxtream",
        :server_debian_password => "fluxtream"
      }
    };
    chef.log_level = :debug
    chef.add_recipe("apt")
    chef.add_recipe("git")
    chef.add_recipe("java::oracle")
    chef.add_recipe("maven")
    chef.add_recipe("mysql::server")
    chef.add_recipe("tomcat7")
    chef.add_recipe("database::mysql")
    chef.add_recipe("fluxtream_main::prepare-projects")
    chef.add_recipe("fluxtream_main::clone-scribe-java")
    chef.add_recipe("fluxtream_main::clone-fluxtream-app")
    chef.add_recipe("fluxtream_main::datastore")
    chef.add_recipe("fluxtream_main::init-mysql-flx")
    chef.add_recipe("fluxtream_main::geocity")
    chef.add_recipe("fluxtream_main::set-environment-ubuntu")
  end

end
