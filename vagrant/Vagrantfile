# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "precise64"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "http://files.vagrantup.com/precise64.box"
  # config.vm.box_url = "http://domain.com/path/to/above.box"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network :forwarded_port, guest: 80, host: 8080
  config.vm.network :forwarded_port, guest: 8080, host:8282
  config.vm.network :forwarded_port, guest: 3306, host: 3366
  config.vm.network :forwarded_port, guest: 9000, host: 8000

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "/Users/candide/projects", "work"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider :virtualbox do |vb|
    # Use VBoxManage to customize the VM. For example to change memory:
    vb.customize ["modifyvm", :id, "--memory", "2048"]
  end
  #
  # View the documentation for the provider you're using for more
  # information on available options.

  config.vm.provider :vmware_fusion do |v|
    v.vmx["memsize"] = "4096"
    v.vmx["numvcpus"] = 4
  end

  # Enable provisioning with chef solo, specifying a cookbooks path, roles
  # path, and data_bags path (all relative to this Vagrantfile), and adding
  # some recipes and/or roles.
  #
  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = "../cookbooks"
  
    # # You may also specify custom JSON attributes:
    chef.json = {
      :mysql => {
        :server_root_password => "fluxtream",
        :server_repl_password => "fluxtream",
        :server_debian_password => "fluxtream"
      },
      :jrebel_jar => "/home/work/JRebel/jrebel.jar",
      :branch => "idempotent_updates",
      :ddl_script => "0.9.0010/schema-after-0.9.0010.sql"
    };
    chef.log_level = :debug
    chef.add_recipe("apt")
    chef.add_recipe("git")
    chef.add_recipe("java::oracle")
    # chef.add_recipe("maven")
    chef.add_recipe("mysql::server")
    chef.add_recipe("tomcat7")
    chef.add_recipe("database::mysql")
    chef.add_recipe("fluxtream_main::prepare-projects")
    # chef.add_recipe("fluxtream_main::clone-scribe-java")
    chef.add_recipe("fluxtream_main::clone-fluxtream-app")
    chef.add_recipe("fluxtream_main::datastore")
    chef.add_recipe("fluxtream_main::init-mysql-flx")
    chef.add_recipe("fluxtream_main::geocity")
    chef.add_recipe("fluxtream_main::set-environment-ubuntu")
    chef.add_recipe("fluxtream_main::set-webapp-symlink-dev")
  end

end
